---
// ClientThemeToggle.astro - bezpieczne ładowanie komponentu ThemeToggle tylko po stronie klienta
---

<div id="theme-toggle-container" class="y2k-theme-button p-2 rounded-full transition-transform hover:scale-110 active:scale-95">
  <!-- Placeholder, który będzie widoczny podczas renderowania po stronie serwera -->
  <div class="relative w-8 h-8 flex items-center justify-center">
    <div class="absolute inset-0 rounded-full bg-gradient-to-br from-pink-300 via-purple-300 to-indigo-400 opacity-30 animate-pulse"></div>
    <div class="absolute top-0 left-0 w-2 h-2 rounded-full bg-white opacity-70"></div>
    <div class="absolute bottom-1 right-1 w-1.5 h-1.5 rounded-full bg-yellow-200 opacity-70"></div>
  </div>
</div>

<script>
  // Skrypt uruchamiany po stronie klienta
  import { ThemeProvider } from './ThemeProvider';
  import ThemeToggle from './ThemeToggle';
  import { createElement } from 'react';
  import { createRoot } from 'react-dom/client';

  // Poczekaj na załadowanie DOM
  document.addEventListener('DOMContentLoaded', () => {
    const container = document.getElementById('theme-toggle-container');
    if (container) {
      // Utwórz root dla React
      const root = createRoot(container);
      
      // Renderuj ThemeToggle wewnątrz ThemeProvider
      root.render(
        createElement(ThemeProvider, {}, 
          createElement(ThemeToggle)
        )
      );
    }
  });
</script>

<style>
  /* Style można dodać tutaj, jeśli potrzebne */
  #theme-toggle-container {
    display: inline-block;
  }
</style> 